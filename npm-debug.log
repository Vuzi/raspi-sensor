0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.11.2
3 info using node@v0.12.6
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/pi/raspi-sensor',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/pi/.npm/raspi-sensors/0.2.0/package.tgz not in flight; packing
9 verbose tar pack [ '/home/pi/.npm/raspi-sensors/0.2.0/package.tgz',
9 verbose tar pack   '/home/pi/raspi-sensor' ]
10 verbose tarball /home/pi/.npm/raspi-sensors/0.2.0/package.tgz
11 verbose folder /home/pi/raspi-sensor
12 info prepublish raspi-sensors@0.2.0
13 verbose addLocalTarball adding from inside cache /home/pi/.npm/raspi-sensors/0.2.0/package.tgz
14 silly cache afterAdd raspi-sensors@0.2.0
15 verbose afterAdd /home/pi/.npm/raspi-sensors/0.2.0/package/package.json not in flight; writing
16 verbose afterAdd /home/pi/.npm/raspi-sensors/0.2.0/package/package.json written
17 silly publish { name: 'raspi-sensors',
17 silly publish   version: '0.2.0',
17 silly publish   description: 'Raspberry-pi plugin to easily fetch data from sensors (DHT22, BMP180, TLS2561 and PIR)',
17 silly publish   author: { name: 'Guillaume VILLEREZ', email: 'vuzi@vuzi.fr' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/Vuzi/raspi-sensor.git' },
17 silly publish   bugs: { url: 'https://github.com/Vuzi/raspi-sensor/issues' },
17 silly publish   main: 'build/raspi-sensors',
17 silly publish   scripts:
17 silly publish    { test: 'echo "Error: no test specified" && exit 1',
17 silly publish      install: 'bash install.sh' },
17 silly publish   gypfile: true,
17 silly publish   keywords:
17 silly publish    [ 'rapsberry-pi',
17 silly publish      'rapsberry',
17 silly publish      'sensor',
17 silly publish      'DHT22',
17 silly publish      'BMP180',
17 silly publish      'TLS2561',
17 silly publish      'PIR' ],
17 silly publish   license: 'Apache-2.0',
17 silly publish   readme: '# raspi-sensor\nNodejs C++ plugin, allowing to easily read data from raspberryPi\'s sensors.\n\n## Supported sensors\nFor now, those sensors are supported :\n- DHT22 (GPIO)\n- PIR (GPIO)\n- BMP180 (i2c)\n- TLS2561 (i2c)\n\n## Requirement\nNodejs, npm and node-gyp are required. This actual version uses the *0.12.6* version of Nodejs, and may or may not be compatible with newest or oldest versions.\n\n### i2c sensors\nTo use **i2c** sensors, the i2c driver should be loading, usually using [raspi-config](https://learn.adafruit.com/adafruits-raspberry-pi-lesson-4-gpio-setup/configuring-i2c). The file (usually `/dev/i2c-1`) used to communicate with the bus will be asked during the installation.\n\n### GPIO sensors\nIf you wish to use **GPIO** sensors, an existing installation of [*wiringPi*](http://wiringpi.com/pins/) is also required. The static library of **wiringPi** should be generated, instead of the default shared one. To do so, run :\n````\nmake install-static\n````\nin the subdirectory \'wiringPi\' at the root of **wiringPi**. The path to the generated static library will be asked during the installation.\n\n### Compiling\nFinally, **node-gyp**, **g++/gcc 4.8.2** and **Make** are also needed to compile and generate the plugin. You can install **node-gyp** with npm, and **g++/gcc** and **Make** with your favorite package manager.\n\nYou should also look at the tests files (located in the test sub directory) and modify the pin and addresses according to your own configuration, using **WiringPi** own [notation](http://wiringpi.com/pins/). If any sensor isn\'t connected, feel free to comment its initialization.\n\n## Building the plugin\nOnce everything is installed, simply run :\n````\nnode-gyp configure\nnode-gyp build raspi-sensors-gpio --debug # To use i2c and gpio sensors\nnode-gyp build raspi-sensors --debug # To use i2c sensors\n````\nYou should now be able to run the sensor test \'test.js\' :\n````\nsudo node test/test_i2c.js  # Test some i2c sensors\nsudo node test/test_gpio.js # Test a GPIO sensor\nsudo node test/test_all.js  # Test both GPIO and i2c sensors\n````\nIf your configuration is correct, you\'ll see some data from your sensors.\n\n## Note\nNote that, for now, root credentials are needed for any GPIO sensors because **wiringPi** needs it to access the GPIO bus, and because we need to access the i2c located in */dev*.\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '7a1db94615e32a472940e68e1fc92be8c790a412',
17 silly publish   homepage: 'https://github.com/Vuzi/raspi-sensor#readme',
17 silly publish   _id: 'raspi-sensors@0.2.0',
17 silly publish   _shasum: '8652ed1055b4240e859c850ca4b105b2771d427f',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name raspi-sensors
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/raspi-sensors
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /home/pi/.npm/raspi-sensors/0.2.0/package.tgz
25 verbose request uri https://registry.npmjs.org/raspi-sensors
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 18:38:37
28 verbose request using bearer token for auth
29 verbose request id 4d04053d4b7597b5
30 http request PUT https://registry.npmjs.org/raspi-sensors
31 http 403 https://registry.npmjs.org/raspi-sensors
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=300',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Sat, 06 Feb 2016 18:38:39 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-fra1238-FRA',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1454783918.350260,VS0,VE1397' }
33 verbose request invalidating /home/pi/.npm/registry.npmjs.org/raspi-sensors on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 0.2.0." : raspi-sensors
35 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:247:14)
35 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:170:14)
35 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:354:22)
35 verbose stack     at Request.emit (events.js:110:17)
35 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1207:14)
35 verbose stack     at Request.emit (events.js:129:20)
35 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1153:12)
35 verbose stack     at IncomingMessage.emit (events.js:129:20)
35 verbose stack     at _stream_readable.js:908:16
35 verbose stack     at process._tickCallback (node.js:355:11)
36 verbose statusCode 403
37 verbose pkgid raspi-sensors
38 verbose cwd /home/pi/raspi-sensor
39 error Linux 4.1.16-v7+
40 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
41 error node v0.12.6
42 error npm  v2.11.2
43 error code E403
44 error "You cannot publish over the previously published version 0.2.0." : raspi-sensors
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
